---
- name: install apache
  yum:
    name: "{{ apache_packages }}"
- name: create apache setting directories
  file:
    path: "{{ item }}"
    mode: "0755"
    state: directory
  loop:
    - /etc/httpd/snippets
    - /etc/httpd/sites-available
    - /etc/httpd/sites-enabled
- name: update load base module
  import_tasks: module/base.yml
- name: update load lua module
  import_tasks: module/lua.yml
- name: update load WebDAV module
  import_tasks: module/dav.yml
- name: update load MPM module
  import_tasks: module/mpm.yml
- name: update load load balancing method module
  import_tasks: module/lbmethod.yml
- name: update load proxy module
  import_tasks: module/proxy.yml
- name: create base setting file
  template:
    src: httpd.conf.j2
    dest: /etc/httpd/conf/httpd.conf
    mode: preserve
    # validate: "/usr/sbin/httpd -t -f %s"
  notify: restart apache
- name: create security setting file
  template:
    src: security.conf.j2
    dest: /etc/httpd/conf.d/security.conf
    mode: preserve
  notify: restart apache
- name: create SSL setting file
  template:
    src: ssl.conf.j2
    dest: /etc/httpd/conf.d/ssl.conf
    mode: preserve
  when: "'mod_ssl' in apache_packages"
  notify: restart apache
- name: create performance setting file
  template:
    src: performance.conf.j2
    dest: /etc/httpd/conf.d/performance.conf
    mode: preserve
  notify: restart apache
- name: create extra setting file
  template:
    src: extra.conf.j2
    dest: /etc/httpd/conf.d/extra.conf
    mode: preserve
  notify: restart apache
- name: copy snippet files
  copy:
    src: "{{ item }}"
    dest: "/etc/httpd/snippets/{{ item | basename }}"
    mode: preserve
  with_fileglob:
    - "*.conf"
- name: set filterd virtualhosts variable
  set_fact:
    exist_virtualhosts: "{{ apache_vhosts | selectattr('removed', 'undefined') | list }}"
    removed_virtualhosts: "{{ apache_vhosts | selectattr('removed', 'defined') | list }}"
    create_doc_root_directoories: "{{ apache_vhosts | selectattr('document_root', 'defined') | selectattr('document_root_create', 'defined') | list }}"
- name: create document root directory
  file:
    path: "{{ item.document_root }}"
    state: directory
    owner: "{{ item.document_root_owner | default(omit) }}"
    group: "{{ item.document_root_group | default(omit) }}"
    mode: "{{ item.document_root_mode | default('0644') }}"
  loop: "{{ create_doc_root_directoories }}"
  loop_control:
    label: "{{ item.name | default(item.server_name) }}"
- name: create virtualhost setting files
  template:
    src: virtualhost.conf.j2
    dest: /etc/httpd/sites-available/{{ item.name | default(item.server_name) }}.conf
    mode: "0644"
  loop: "{{ exist_virtualhosts }}"
  loop_control:
    label: "{{ item.name | default(item.server_name) }}"
  notify: restart apache
- name: enable / disable virtualhost
  file:
    path: /etc/httpd/sites-enabled/{{ item.name | default(item.server_name) }}.conf
    src: "{{ omit if item.disabled | default(false) else '/etc/httpd/sites-available/' + item.name | default(item.server_name) + '.conf' }}"
    state: "{{ 'absent' if item.disabled | default(false) else 'link' }}"
    mode: "0644"
  loop: "{{ exist_virtualhosts }}"
  loop_control:
    label: "{{ item.name | default(item.server_name) }}"
  notify: restart apache
- name: remove virtualhost setting symlink
  file:
    path: /etc/httpd/sites-enabled/{{ item.name | default(item.server_name) }}.conf
    state: absent
  loop: "{{ removed_virtualhosts }}"
  loop_control:
    label: "{{ item.name | default(item.server_name) }}"
  notify: restart apache
- name: remove virtualhost setting files
  file:
    path: /etc/httpd/sites-available/{{ item.name | default(item.server_name) }}.conf
    state: absent
  loop: "{{ removed_virtualhosts }}"
  loop_control:
    label: "{{ item.name | default(item.server_name) }}"
  notify: restart apache
- name: install firewalld
  yum:
    name: firewalld
- name: allow http port
  firewalld:
    service: http
    permanent: true
    state: enabled
  notify: restart firewalld
- name: allow https port
  firewalld:
    service: https
    permanent: true
    state: enabled
  when: "'mod_ssl' in apache_packages"
  notify: restart firewalld
- name: Apache is active and enabled on system startup
  systemd:
    name: httpd
    state: started
    enabled: true
