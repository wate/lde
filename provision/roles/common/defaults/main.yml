---
common_packages:
  - lsb-release
  - build-essential
  - cpp
  - curl
  - rsync
  - make
  - unzip
  - zip
  - cron
  - perl
  - patch
  - autoconf
  - automake
  - vim
  - bash-completion
  - git
  - git-completion
  - man-db
  - diffstat
  - vnstat
  - m4
  - libtool
  - gcc
  - bison
  - flex
  - acl
  - pkg-config
  - imagemagick
  - postfix
  - ca-certificates
  - software-properties-common

common_groups: []
  # - name: group1
  # - name: group2
  #   removed: true
  # - name: system_group
  #   system: true
  # - name: system_group_with_id
  #   id: 1010
  #   system: true

common_users: []
  # - name: sample_user
  #   # Optional
  #   password: "{{ 'password' | password_hash('sha512') }}"
  #   groups:
  #     - group1
  #     - group2
  #   authorized_keys:
  #     - key: https://github.com/wate.keys
  #     - key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
  #       removed: true
  #   shell: /bin/nologin
  #   ssh_config:
  #     - name: github.com
  #       content: |
  #         HostName github.com
  #         User git
  #         IdentityFile ~/.ssh/github_deploy_key
  #         StrictHostKeyChecking no
  #     - name: bitbucket.org
  #       content: |
  #         HostName bitbucket.org
  #         User git
  #         IdentityFile ~/.ssh/bitbucket_deploy_key
  #         StrictHostKeyChecking no
  #     - name: gitlab.com
  #       content: |
  #         HostName gitlab.com
  #         User git
  #         IdentityFile ~/.ssh/gitlab_deploy_key
  #         StrictHostKeyChecking no
  #   # コントロールマシン上の秘密鍵をターゲットマシンの該当ユーザーの~/.ssh/{name}に配置します
  #   upload_private_keys:
  #     - name: github_deploy_key
  #       src: ~/.ssh/github
  #     - name: bitbucket_deploy_key
  #       src: ~/.ssh/bitbucket
  #     - name: gitlab_deploy_key
  #       src: ~/.ssh/gitlab
  #   secret_vars:
  #     - name: DB_HOST
  #       value: localhost
  #     - name: DB_NAME
  #       value: app
  #     - name: DB_USER
  #       value: app_db_user
  #     - name: DB_PASS
  #       value: app_db_pass
  #     - name: REMOVED_VAR
  #       value: app_db_pass
  #       removed: true
  #   cron_jobs:
  #     - name: display date
  #       job: date
  #       minute: 1
  #       hour: 2
  #       day: 3
  #       month: 4
  #       weekday: 5
  #     - name: disable job
  #       job: mkr wrap -- /path/to/your-batch
  #       day: 2
  #       disable: true
  #     - name: remove job
  #       job: mkr wrap -- /path/to/your-batch
  #       day: 3
  #       removed: true
  #   cron_vars:
  #     - name: EMAIL
  #       value: test@example.com
  #     - name: SOME_NAME
  #       value: SOME_VALUE
  #       removed: true
  #       admin: false
  #   # パスワードの更新(on_create or always)
  #   update_password: on_create
  #   # パスワードのロック
  #   password_lock: false
  #   system: true
  #   id: 100000
  #   removed: true

common_hostname: "{{ inventory_hostname }}"

common_ssh_port: 22

common_sshd_custom_cfg: |
  #Port 10022

common_ssh_ufw_rule: allow

common_ssh_use_geoip_filter: true
common_ssh_allow_countries:
  - JP

common_repository_enable: true

common_cron_geoip_update:
  hour: 4
  minute: 0

# common_root_lock: false

fail2ban_cfg: |
  #[DEFAULT]
  #bantime  = 10m
  #findtime  = 10m
  #maxretry = 5
  #sender = root@<fq-hostname>
  #destemail = root@localhost
  [sshd]
  enabled = true

rsyslog_custom_cfg: |
  cron.*				/var/log/cron.log

admin_group_name: server_admin
admin_group_sudo_require_password: false

auto_update_cfg:
  HOSTNAME: "{{ inventory_hostname }}"
  # MAILTO: root
  # SUBJECTPREFIX: CRON-APT
  # MAILON: error
  # SYSLOGON: upgrade
  # EXITON: error

common_swapfile_path: /var/spool/swap/swapfile
common_swap_size: "{{ (((ansible_facts.memtotal_mb + 50) / 1000) | round(1, 'floor') | float * 2) | int }}"

common_files: []
  # # ローカルにあるファイルをアップロード
  # - dest: /usr/local/bin/upload-script
  #   src: path/to/script
  #   mode: "0755"
  #   # owner: root
  #   # group: root
  # # リモートファイルをダウンロード
  # - dest: /usr/local/bin/download-script
  #   url: http://www.example.com/path/to/script
  #   mode: "0755"
  #   # owner: root
  #   # group: root
  #   # auth_basic_user: user
  #   # auth_basic_password: password
  #   # checksum: 1234567890abcdefghijklmnopqrstuvwxyz
  # # 既存のファイルを削除
  # - dest: /usr/local/bin/batch-script
  #   ## ※この属性が指定されている場合は設定値の如何に関わらず、ファイルが存在する場合は削除する
  #   removed: true

common_cron_vars: []
  # - name: PATH
  #   value: /sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin
  # - name: MAILTO
  #   value: root
  # - name: SHELL
  #   value: /usr/bin/bash
  # - name: HOME
  #   value: /
  #   removed: true

common_cron_jobs: []
  # - name: check ssl expiration date
  #   ## 定期実行コマンド
  #   job: cert -f json example.com
  #   ## 定期実行日時(時)
  #   hour: 1
  #   ## 定期実行日時(分)
  #   minute: 23
  #   ## 定期実行日時(日)
  #   # day: "*"
  #   ## 定期実行日時(月)
  #   # month: "*"
  #   ## 定期実行日時(曜日)
  #   # weekday: "*"
  #   ## 実行ユーザー
  #   # user: root
  #   ## 定期実行設定は残したまま無効化するか否か
  #   # disabled: true
  #   ## 定期実行設定の存在の有無(これが指定された場合は値の如何に関わらず、設定が存在する場合は削除する)
  #   # removed: true

# ディスク操作
common_disks: []
  # - device: /dev/sdb
  #   if_device_exists: true
  #   partitions:
  #     - fstype: xfs
  #       number: 1
  #       part_start: 0%
  #       part_end: 100%

# マウント操作
common_mounts: []
  #   ## 追加ディスクのマウント
  # - path: /backup/data
  #   src: /dev/sdb1
  #   if_device_exists: true
  #   fstype: ext4
  #   automount: true
  #   mount_options:
  #     - defaults
  #   ## オブジェクトストレージのマウント
  # - path: /object_strage
  #   required_packages:
  #     - rclone
  #   src: remote:/path/to/remote/folder
  #   fstype: fuse.rclonefs
  #   if_device_exists: false
  #   automount: true
  #   mount_options:
  #     - config=/home/user/.rclone.conf
  #     - allow-other
  #     - default-permissions
  #     - read-only
  #     - max-read-ahead=16M
  #   file:
  #     ## see: https://github.com/rclone/rclone/wiki/rclone-mount-helper-script#rclonefs-helper-script-old-releases-before-v157
  #     src: ./rclonefs.sh
  #     dest: /usr/local/bin/rclonefs
  #   template:
  #     src: ./rclone.conf.j2
  #     dest: /home/user/.rclone.conf

# バックアップスクリプト保存先ディレクトリ
backup_script_dir: /backup/scripts

# バックアップデータ保存先ディレクトリ
backup_dir: /backup/data

# バックアップ設定
backup_settings: []
  # - name: backup setting
  #   ## バックアップコマンド
  #   command: mysqldump -u ${DB_USER} -p${DB_PASS} -h ${DB_HOST} --single-transaction ${DB_NAME} | gzip >{{ backup_dir }}/${DB_NAME}-$(date +"%Y-%m-%d_%H%M%S").sql.gz
  #   ## バックアップ実行日時(時)
  #   hour: 1
  #   ## バックアップ実行日時(分)
  #   minute: 23
  #   ## バックアップ実行日時(日)
  #   # day: "*"
  #   ## バックアップ実行日時(月)
  #   # month: "*"
  #   ## バックアップ実行日時(曜日)
  #   # weekday: "*"
  #   ## バックアップ設定の存在の有無(true:設定が存在しない場合は登録/false:設定が存在する場合は削除)
  #   # state: true
  #   ## 実行ユーザー
  #   # user: root
  #   ## バックアップ設定は残したまま無効化するか否か
  #   # disabled: true
  # - name: backup setting with upload backup script file
  #   command: "{{ backup_script_dir }}/script_file"
  #   ## アップロードするファイル
  #   file: /path/to/script_file
  #   ## アップロード後のファイル名
  #   script_name: script_file
  #   hour: 2
  #   minute: 34
  # - name: backup setting with upload backup script template
  #   command: "{{ backup_script_dir }}/script_file"
  #   ## アップロードするファイルのテンプレートファイル
  #   template: /path/to/script_file.j2
  #   ## アップロード後のファイル名
  #   script_name: script_file
  #   hour: 2
  #   minute: 34
  # - name: backup setting with download backup script
  #   command: "{{ backup_script_dir }}/backup.sh"
  #   ## ダウンロールするファイル
  #   url: http://example.com/sucripts/backup.sh
  #   ## バックアップスクリプトのチェックサム
  #   # checksome: 6e642bb8dd5c2e027bf21dd923337cbb4214f827
  #   ## Basic認証(ユーザー名)
  #   # auth_basic_user: user
  #   ## Basic認証(パスワード)
  #   # auth_basic_password: common_requre_sudo_password
  #   hour: 3
  #   minute: 45

common_install_tools:
  - silversearcher-ag
  - tig
  - rclone
  - nkf
  - vnstati
  - glances

common_japanese_fonts:
  - fonts-ipaexfont
  - fonts-ipafont
  - fonts-noto-cjk
  - fonts-noto-cjk-extra
