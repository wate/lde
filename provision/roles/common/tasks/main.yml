---
- name: install requrement packages
  yum:
    name: "{{ item }}"
  with_items:
    - sudo
- name: admin group sudo setting
  template:
    src: wheel.j2
    dest: /etc/sudoers.d/wheel
    validate: '/usr/sbin/visudo -cf %s'
  tags:
    - sudo
- name: manage groups
  group:
    name: "{{ item.name }}"
    state: "{{ 'absent' if item.remove|default(false) else 'present' }}"
  with_items: "{{ common_groups }}"
  tags:
    - group
- name: create skeleton user web directory
  file:
    path: /etc/skel/public
    mode: "0755"
    state: directory
  tags:
    - skeleton
- name: create skeleton user web directory
  file:
    path: /home
    mode: "0755"
    state: directory
- name: manage users
  user:
    name: "{{ item.name }}"
    password: "{{ item.password|default(omit) }}"
    shell: "{{ item.shell|default('/bin/bash') }}"
    groups: "{{ item.groups|default(omit) }}"
    state: "{{ 'absent' if item.remove|default(false) else 'present' }}"
    # `userdel` command `--remove` option
    remove: "{{ item.remove|default(false) }}"
  with_items: "{{ common_users }}"
  tags:
    - user
- name: set authorized keys
  authorized_key:
    user: "{{ item.0.name }}"
    key: "{{ item.1 }}"
  with_subelements:
    - "{{ common_users|selectattr('remove', 'undefined')|list }}"
    - authorized_keys
    - flags:
      skip_missing: yes
  tags:
    - user
- name: add admin group for admin users
  user:
    name: "{{ item.name }}"
    groups: wheel
    append: yes
  with_items: "{{ common_users|selectattr('remove', 'undefined')|selectattr('admin', 'defined')|selectattr('admin', 'equalto', true)|list }}"
  tags:
    - user
- name: install common packages
  yum:
    name: "{{ item }}"
  with_items: "{{ common_packages }}"
- name: install firewalld
  yum:
    name: firewalld
- name: firewalld is active and enabled on system startup
  systemd:
    name: firewalld
    state: started
    enabled: yes
- name: install etckeeper
  yum:
    name: etckeeper
    enablerepo: epel
- name: check git repository directory
  stat:
    path: /etc/.git
  register: result
- block:
    - name: initilize etckeeper
      command: etckeeper init
      args:
        chdir: /etc
    - name: initial commit
      command: etckeeper commit "Initial commit"
  when: not result.stat.exists
- name: install fail2ban
  yum:
    name: fail2ban
    enablerepo: epel
- name: create fail2ban setting
  template:
    src: jail.local.j2
    dest: /etc/fail2ban/jail.local
  notify: restart fail2ban
- name: fail2ban is active and enabled on system startup
  systemd:
    name: fail2ban
    state: started
    enabled: yes
