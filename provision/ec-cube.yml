- name: install php APCu module
  yum:
    name: php-pecl-apcu
- name: create EC-CUBE output directory
  file:
    path: "{{ item }}"
    state: directory
    mode: "0777"
    owner: vagrant
    group: vagrant
  with_items:
    - /var/ec-cube
    - /var/ec-cube/cache
    - /var/ec-cube/log
    - /var/ec-cube/sessions
- name: check composer.json
  stat:
    path: /var/www/html/composer.json
  register: result
  tags: always
- block:
    - name: remove .gitkeep
      file:
        path: /var/www/html/.gitkeep
        state: absent
    - name: create EC-CUBE project
      composer:
        command: create-project
        arguments: "ec-cube/ec-cube ./"
        prefer_dist: true
        no_dev: true
        no_scripts: true
        working_dir: /var/www/html
    - name: create cache setting files
      blockinfile:
        path: /var/www/html/app/config/eccube/packages/{{ item }}/framework.yaml
        create: true
        block: "{{ cache_setting | to_nice_yaml }}"
      with_items:
        - dev
        - prod
      vars:
        cache_setting:
          framework:
            cache:
              system: cache.adapter.apcu
    - name: find replace setting files
      find:
        paths: /var/www/html/app/config/eccube/packages
        recurse: true
        patterns: monolog.yml
      register: monolog_result
    - name: replace log directory setting
      replace:
        path: "{{ item }}"
        regexp: "%kernel.logs_dir%"
        replace: /var/ec-cube/log
      with_items: "{{ monolog_result.files | map(attribute='path') | list }}"
    - name: replace session save directory setting
      replace:
        path: /var/www/html/app/config/eccube/packages/framework.yaml
        regexp: "%kernel.project_dir%/var/sessions"
        replace: /var/ec-cube/sessions
    - name: create symlink
      file:
        path: /var/www/html/var/{{ item }}
        src: /var/ec-cube/{{ item }}
        state: link
      with_items:
        - cache
        - log
        - sessions
    - name: execute compile
      composer:
        command: run
        arguments: compile
        working_dir: /vagrant/source
    - name: execute auto-scripts
      composer:
        command: run
        arguments: auto-scripts
        working_dir: /vagrant/source
    - name: recreate .gitkeep
      file:
        path: /var/www/html/.gitkeep
        state: touch
        access_time: preserve
        modification_time_format: preserve
    - name: create .env file
      blockinfile:
        path: /var/www/html/.env
        block: |
          APP_ENV={{ ec_cube.app_env }}
          APP_DEBUG={{ '1' if ec_cube.app_debug else '0' }}
          DATABASE_URL=mysql://{{ mariadb_databases[0].user|default(mariadb_databases[0].name) }}:{{ mariadb_databases[0].password }}@localhost/{{ mariadb_databases[0].name }}
        create: true
  environment:
    ECCUBE_ADMIN_USER: "{{ ec_cube.admin_user }}"
    ECCUBE_ADMIN_PASS: "{{ ec_cube.admin_pass }}"
    ECCUBE_ADMIN_MAIL: "{{ ec_cube.admin_email }}"
    DATABASE_URL: "mysql://{{ mariadb_databases[0].user|default(mariadb_databases[0].name) }}:{{ mariadb_databases[0].password }}@localhost/{{ mariadb_databases[0].name }}"
  become: false
  when: not result.stat.exists
- name: create base_info update sql file
  template:
    src: update_base_info.sql.j2
    dest: /tmp/update_base_info.sql
- name: update base_info table
  mysql_db:
    name: "{{ mariadb_databases[0].name }}"
    state: import
    target: /tmp/update_base_info.sql
- name: remove besu_info update sql file
  file:
    path: /tmp/update_base_info.sql
    state: absent
- name: change permission
  file:
    path: /var/ec-cube
    mode: "u+w,g+w,o+w"
    recurse: true
- name: clear EC-CUBE cache
  command: bin/console cache:clear --no-warmup
  args:
    chdir: /vagrant/source
- block:
    - name: install EC-CUBE plugins
      command: bin/console eccube:composer:require "ec-cube/{{ item.code }}"
      args:
        chdir: /vagrant/source
        creates: /vagrant/source/app/Plugin/{{ item.code }}
      with_items: "{{ ec_cube.plugins | default([]) }}"
    - name: change plugin status
      command: bin/console eccube:plugin:{{ 'enable' if item.status else 'disable' }} --code="{{ item.code }}"
      args:
        chdir: /vagrant/source
      with_items: "{{ ec_cube.plugins | default([]) | selectattr('status', 'defined') | list }}"
  become: false
- name: clear EC-CUBE cache
  command: bin/console cache:clear --no-warmup
  args:
    chdir: /vagrant/source
