# code: language=ansible
---
- name: Wikiページの取得しローカルのファイルを更新
  hosts: all
  become: false
  gather_facts: false
  connection: local
  pre_tasks:
    - name: Backlog情報の検証
      ansible.builtin.assert:
        that:
          - backlog_api_key | length > 0
          - backlog_url | length > 0
          - backlog_project | length > 0
        fail_msg: 更新対象のBacklog情報が設定されていません
  tasks:
    - name: Wikiページ一覧を取得する
      ansible.builtin.uri:
        method: GET
        url: "{{ backlog_url }}api/v2/wikis?apiKey={{ backlog_api_key }}&projectIdOrKey={{ backlog_project }}"
      register: request_result
    - name: 登録済みWikiページ一覧のIDと各ページのパスを変数に設定
      ansible.builtin.set_fact:
        registerd_wiki_page_ids: "{{ request_result.json | default([]) | items2dict('name', 'id') }}"
        wiki_page_paths: "{{ wiki_pages | items2dict('name', 'file') }}"
    - name: Debug
      ansible.builtin.debug:
        var: registerd_wiki_page_ids
    - name: Debug
      ansible.builtin.debug:
        var: wiki_page_paths
    - name: 各Wikiページの内容を取得
      ansible.builtin.uri:
        method: GET
        url: "{{ backlog_url }}api/v2/wikis/{{ registerd_wiki_page_ids[item] }}?apiKey={{ backlog_api_key }}"
      register: request_results
      loop: "{{ wiki_page_paths.keys() | intersect(registerd_wiki_page_ids.keys()) }}"
      loop_control:
        label: "{{ item }}"
    - name: 取得したWekiページの内容を変数に格納
      ansible.builtin.set_fact:
        fetchd_wiki_pages: "{{ request_results | default([]) | json_query('results[].json') }}"
    - name: 保存先ディレクトリを作成
      ansible.builtin.file:
        path: "{{ root_dir + wiki_page_paths[item.name] | dirname }}"
        state: directory
        mode: omit
      loop: "{{ fetchd_wiki_pages }}"
      loop_control:
        label: "{{ root_dir + wiki_page_paths[item.name] | dirname }}"
    - name: ローカルのファイルを更新
      ansible.builtin.copy:
        dest: "{{ root_dir + wiki_page_paths[item.name] }}"
        content: "{{ item.content }}\n"
        mode: omit
      loop: "{{ fetchd_wiki_pages }}"
      loop_control:
        label: "{{ root_dir + wiki_page_paths[item.name] }}"
    # - name: 添付ファイルのダウンロード
    #   ansible.builtin.get_url:
    #     url: "{{ item.1.content_url }}"
    #     dest: "{{ root_dir + (wiki_page_paths[item.0.title] | dirname) + '/' + item.1.filename }}"
    #     mode: omit
    #     headers:
    #       X-Redmine-API-Key: "{{ redmine_api_key }}"
    #   loop: "{{ fetchd_wiki_pages | subelements('attachments') }}"
    #   loop_control:
    #     label: "{{ item.0.title }}:{{ item.1.filename }}"
