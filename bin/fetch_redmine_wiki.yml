# code: language=ansible
---
- name: Wikiページの取得しローカルのファイルを更新
  hosts: all
  become: false
  gather_facts: false
  connection: local
  pre_tasks:
    - name: Redmine情報の検証
      ansible.builtin.assert:
        that:
          - redmine_api_key | length > 0
          - redmine_url | length > 0
          - redmine_project | length > 0
        fail_msg: 更新対象のRedmine情報が設定されていません
  tasks:
    - name: Wikiページとパスの対応変数を設定
      ansible.builtin.set_fact:
        wiki_page_paths: "{{ wiki_pages | items2dict('name', 'file') }}"
    - name: 各Wikiページの内容を取得
      ansible.builtin.uri:
        method: GET
        url: "{{ redmine_url }}/projects/{{ redmine_project }}/wiki/{{ item.name | urlencode }}.json?include=attachments"
        headers:
          X-Redmine-API-Key: "{{ redmine_api_key }}"
      register: request_results
      loop: "{{ wiki_pages | default([]) }}"
      loop_control:
        label: "{{ item.name }}"
    - name: 取得したWekiページの内容を変数に格納
      ansible.builtin.set_fact:
        fetchd_wiki_pages: "{{ request_results | default([]) | json_query('results[].json.wiki_page') }}"
    - name: 保存先ディレクトリを作成
      ansible.builtin.file:
        path: "{{ root_dir + wiki_page_paths[item.title] | dirname }}"
        state: directory
        mode: omit
      loop: "{{ fetchd_wiki_pages }}"
      loop_control:
        label: "{{ root_dir + wiki_page_paths[item.title] | dirname }}"
    - name: ローカルのファイルを更新
      ansible.builtin.copy:
        dest: "{{ root_dir + wiki_page_paths[item.title] }}"
        content: "{{ item.text }}\n"
        mode: omit
      loop: "{{ fetchd_wiki_pages }}"
      loop_control:
        label: "{{ root_dir + wiki_page_paths[item.title] }}"
    - name: 添付ファイルのダウンロード
      ansible.builtin.get_url:
        url: "{{ item.1.content_url }}"
        dest: "{{ root_dir + (wiki_page_paths[item.0.title] | dirname) + '/' + item.1.filename }}"
        mode: omit
        headers:
          X-Redmine-API-Key: "{{ redmine_api_key }}"
      loop: "{{ fetchd_wiki_pages | subelements('attachments') }}"
      loop_control:
        label: "{{ item.0.title }}:{{ item.1.filename }}"
