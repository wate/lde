---
# code: language=ansible
- name: Setup post create task
  hosts: all
  connection: local
  become: false
  tasks:
    - name: Install/update osv-scanner
      become: true
      block:
        - name: Check osv-scanner latest version
          ansible.builtin.uri:
            url: https://api.github.com/repos/google/osv-scanner/releases/latest
            headers:
              Accept: application/vnd.github+json
          register: latest_releases
        - name: Set os-scanner version variable
          ansible.builtin.set_fact:
            osv_scanner_version: "{{ latest_releases.json.tag_name }}"
        - name: Set asset file variable
          ansible.builtin.set_fact:
            osv_scanner_download_file: osv-scanner_{{ ansible_facts['system'] | lower }}_{{ arch_type_maps[ansible_facts['architecture']] }}
          vars:
            arch_type_maps:
              x86_64: amd64
              aarch64: arm64
        - name: Install/update osv-scanner
          ansible.builtin.get_url:
            url: https://github.com/google/osv-scanner/releases/download/{{ osv_scanner_version }}/{{ osv_scanner_download_file }}
            dest: /usr/local/bin/osv-scanner
            mode: "0755"
    - name: Install/Update git-delta
      become: true
      block:
        - name: Check git-delta latest version
          ansible.builtin.uri:
            url: https://api.github.com/repos/dandavison/delta/releases/latest
            headers:
              Accept: application/vnd.github+json
          register: latest_releases
        - name: Set git-delta version variable
          ansible.builtin.set_fact:
            delta_version: "{{ latest_releases.json.tag_name }}"
        - name: Set asset file variable
          ansible.builtin.set_fact:
            delta_package_file: git-delta_{{ delta_version }}_{{ arch_type_maps[ansible_facts['architecture']] }}.deb
          vars:
            arch_type_maps:
              x86_64: amd64
              aarch64: arm64
        - name: Install/update git-delta
          ansible.builtin.apt:
            deb: https://github.com/dandavison/delta/releases/download/{{ delta_version }}/{{ delta_package_file }}
        - name: Set variable
          ansible.builtin.set_fact:
            delta_package_file: git-delta_{{ delta_version }}_{{ arch_type_maps[ansible_facts['architecture']] }}.deb
          vars:
            arch_type_maps:
              x86_64: amd64
              aarch64: arm64
    - name: Install/Update task
      become: true
      block:
        - name: Check task latest version
          ansible.builtin.uri:
            url: https://api.github.com/repos/go-task/task/releases/latest
            headers:
              Accept: application/vnd.github+json
          register: latest_releases
        - name: Set version variable
          ansible.builtin.set_fact:
            task_version: "{{ latest_releases.json.tag_name }}"
        - name: Set asset file variable
          ansible.builtin.set_fact:
            task_package_file: task_linux_{{ arch_type_maps[ansible_facts['architecture']] }}.deb
          vars:
            arch_type_maps:
              x86_64: amd64
              aarch64: arm64
        - name: Install/update task
          ansible.builtin.apt:
            deb: https://github.com/go-task/task/releases/download/{{ task_version }}/{{ task_package_file }}
    - name: Install/Update d2
      become: true
      block:
        - name: Check d2 latest version
          ansible.builtin.uri:
            url: https://api.github.com/repos/terrastruct/d2/releases/latest
            headers:
              Accept: application/vnd.github+json
          register: latest_releases
        - name: Set d2 version variable
          ansible.builtin.set_fact:
            d2_version: "{{ latest_releases.json.tag_name }}"
        - name: Set asset file variable
          ansible.builtin.set_fact:
            d2_asset_file: d2-{{ d2_version }}-{{ ansible_facts['system'] | lower }}-{{ arch_type_maps[ansible_facts['architecture']] }}.tar.gz
          vars:
            arch_type_maps:
              x86_64: amd64
              aarch64: arm64
        - name: Create download directory
          ansible.builtin.file:
            path: /usr/local/src/d2
            state: directory
            mode: "0755"
        - name: Download d2 asset file
          ansible.builtin.unarchive:
            src: https://github.com/terrastruct/d2/releases/download/{{ d2_version }}/{{ d2_asset_file }}
            dest: /usr/local/src/d2
            extra_opts:
              - --strip-components=1
            remote_src: true
          register: unarchived_d2_result
        - name: Install/update d2
          ansible.builtin.command:
            cmd: /usr/local/src/d2/scripts/install.sh
            chdir: /usr/local/src/d2
          when: unarchived_d2_result is changed
    - name: Install/Update pict
      become: true
      block:
        - name: Checkout pict source
          ansible.builtin.git:
            repo: https://github.com/microsoft/pict.git
            dest: /usr/local/src/pict
            version: main
          register: checkout_pict_result
        - name: Build pict
          ansible.builtin.command:
            cmd: make
            chdir: /usr/local/src/pict
          when: checkout_pict_result is changed
        - name: Create symlink
          ansible.builtin.file:
            path: /usr/local/bin/pict
            src: /usr/local/src/pict/pict
            state: link
    - name: Install npm packages
      become: true
      block:
        - name: Install/Update zx
          community.general.npm:
            name: zx
            global: true
            state: latest
        - name: Install/Update ni
          community.general.npm:
            name: "@antfu/ni"
            global: true
            state: latest
    - name: Set user setting
      block:
        - name: Add direnv setting
          ansible.builtin.blockinfile:
            path: ~/.bashrc
            marker: "# {mark} direnv ANSIBLE MANAGED BLOCK"
            block: eval "$(direnv hook bash)"
        - name: Add eza setting
          ansible.builtin.blockinfile:
            path: ~/.bashrc
            marker: "# {mark} eza ANSIBLE MANAGED BLOCK"
            block: alias ls="eza --git --header"
        - name: Setup bash-git-prompt
          block:
            - name: Checkout bash-git-prompt
              ansible.builtin.git:
                repo: https://github.com/magicmonty/bash-git-prompt.git
                dest: ~/.bash-git-prompt
                version: master
                depth: 1
            - name: Add bash-git-prompt setting
              ansible.builtin.blockinfile:
                path: ~/.bashrc
                marker: "# {mark} bash-git-prompt setting ANSIBLE MANAGED BLOCK"
                block: |
                  if [ -f "$HOME/.bash-git-prompt/gitprompt.sh" ]; then
                      GIT_PROMPT_ONLY_IN_REPO=1
                      source $HOME/.bash-git-prompt/gitprompt.sh
                  fi
        - name: Add tbls setting
          ansible.builtin.blockinfile:
            path: ~/.bashrc
            marker: "# {mark} tbls ANSIBLE MANAGED BLOCK"
            block: |
              export TBLS_DSN="mariadb://app_dev:app_dev_password@db:3306/app_dev"
              export TBLS_DOC_PATH="docs/schema"
        - name: Set git safe.directory setting
          community.general.git_config:
            name: safe.directory
            scope: global
            value: "{{ ansible_facts.env.PWD | dirname | dirname }}"
    - name: Add bash-completion files
      block:
        - name: Create bash-completion setting directory
          ansible.builtin.file:
            path: ~/.local/share/bash-completion/completions
            state: directory
            mode: "0755"
        - name: Add composer command completion setting
          ansible.builtin.blockinfile:
            path: ~/.bashrc
            marker: "# {mark} composer ANSIBLE MANAGED BLOCK"
            block: eval "$(composer completion)"
        - name: Add npm command completion setting
          ansible.builtin.blockinfile:
            path: ~/.bashrc
            marker: "# {mark} npm ANSIBLE MANAGED BLOCK"
            block: eval "$(npm completion)"
        - name: Add yarn command completion setting
          ansible.builtin.get_url:
            url: https://raw.githubusercontent.com/dsifford/yarn-completion/master/yarn-completion.bash
            dest: ~/.local/share/bash-completion/completions/yarn
            mode: "0755"
