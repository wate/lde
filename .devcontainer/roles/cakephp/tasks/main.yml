---
- name: Setup PHP project
  become: true
  block:
    - name: Create CakePHP tomprary directory
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: "0777"
      loop:
        - /var/cakephp
        - /var/cakephp/tmp/cache
        - /var/cakephp/tmp/session
        - /var/cakephp/tmp/tests
        - /var/cakephp/logs
- name: Setup PHP project
  become: false
  block:
    - name: Create symlink
      ansible.builtin.file:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        state: link
      loop:
        - src: /var/cakephp/logs
          dest: ~/logs
        - src: /vagrant
          dest: ~/src
    - name: Check exists composer.json
      ansible.builtin.stat:
        path: "{{ php_project_source_dir }}/composer.json"
      register: composer_json_result
    - name: Remove temporary project directory
      ansible.builtin.file:
        path: "{{ php_project_tmp_dir }}"
        state: absent
    - name: Create PHP project
      when: not composer_json_result.stat.exists
      block:
        - name: Create PHP project
          community.general.composer:
            command: create-project
            arguments: '"cakephp/app:^{{ cakephp_major_version | default(4) | string }}" {{ php_project_tmp_dir }}'
            no_dev: false
            prefer_dist: true
            working_dir: "{{ php_project_tmp_dir | dirname }}"
    - name: Setup PHP project
      when: composer_json_result.stat.exists
      block:
        - name: Create temporary project directory
          ansible.builtin.file:
            path: "{{ php_project_tmp_dir }}"
            state: directory
            mode: "0755"
        - name: Synchronize project files(VirtualBox shard directory => temporary directory)
          ansible.posix.synchronize:
            src: "{{ php_project_source_dir }}/"
            dest: "{{ php_project_tmp_dir }}"
            rsync_opts: "{{ cakephp_project_exclude_synchronize_params | map('regex_replace', '(.+)', '--exclude=\\1') }}"
          delegate_to: "{{ inventory_hostname }}"
        - name: Install php dependency packages
          community.general.composer:
            command: install
            no_dev: false
            working_dir: "{{ php_project_tmp_dir }}"
    - name: Check exists cake command completion file
      ansible.builtin.stat:
        path: "{{ php_project_tmp_dir }}/bin/bash_completion.sh"
      register: cakephp_command_completion_file_result
    - name: Create cake completion file
      ansible.builtin.copy:
        src: "{{ php_project_tmp_dir }}/bin/bash_completion.sh"
        dest: ~/.local/share/bash-completion/completions/cake
        mode: "0644"
        remote_src: true
      when: cakephp_command_completion_file_result.stat.exists
    - name: Add php project dependency packages
      community.general.composer:
        command: require
        arguments: '"{{ item.name }}" {{ item.dev | default(false) | ternary("--dev", "") }}'
        working_dir: "{{ php_project_tmp_dir }}"
      loop: "{{ cakephp_project_addtitinal_packages | default([]) }}"
      loop_control:
        label: "{{ item.name }}"
    - name: Setup authentication plugin setting
      ansible.builtin.include_tasks:
        file: plugins/authentication.yml
    - name: Setup authorization plugin setting
      ansible.builtin.include_tasks:
        file: plugins/authorization.yml
    - name: Setup localized plugin setting
      ansible.builtin.include_tasks:
        file: plugins/localized.yml
    - name: Setup Cakelte plugin setting
      ansible.builtin.include_tasks:
        file: plugins/cakelte.yml
    - name: Setup tcpdf font files
      ansible.builtin.import_tasks:
        file: plugins/tcpdf.yml
    - name: Synchronize project files(temporary directory => VirtualBox shard directory)
      ansible.posix.synchronize:
        src: "{{ php_project_tmp_dir }}/"
        dest: "{{ php_project_source_dir }}"
        rsync_opts: "{{ cakephp_project_exclude_synchronize_params | map('regex_replace', '(.+)', '--exclude=\\1') }}"
      delegate_to: "{{ inventory_hostname }}"
    - name: Remove temporary project directory
      ansible.builtin.file:
        path: "{{ php_project_tmp_dir }}"
        state: absent
    - name: Set variables
      ansible.builtin.set_fact:
        cakephp_gitignore_value: |
          ### CakePHP ####
          /config/app_local.php
          /config/.env
          /config/Migrations/schema-dump-default.lock
          /logs/*
          /tmp/*
          /vendor/*
          ### direnv ###
          .envrc
        cakephp_dot_envrc_value: |
          PATH_add bin
          layout php
          layout node
          source_env_if_exists .env
        cakephp_dot_env_value: |
          export DEBUG="True"
          export APP_DEFAULT_LOCALE="ja_JP"
          export APP_DEFAULT_TIMEZONE="Asia/Tokyo"
          export DATABASE_URL="{{ cakephp_database_url }}"
          export DATABASE_TEST_URL="{{ cakephp_database_test_url }}"
          ### 共有ディレクトリ内のログ出力がボトルネックになっている場合は以下の設定を有効化し、
          ### ログの出力先を共有ディレクトリ以外に出力させる
          # export LOG_DEBUG_URL=file:///var/cakephp/logs/
          # export LOG_ERROR_URL=file:///var/cakephp/logs/
          # export LOG_QUERIES_URL=file:///var/cakephp/logs/
          {% if lookup('env', 'EMAIL_TRANSPORT_DEFAULT_URL') %}
          export EMAIL_TRANSPORT_DEFAULT_URL={{ lookup('env', 'EMAIL_TRANSPORT_DEFAULT_URL') }}
          {% endif %}
          {% if redis_port is defined %}
          export CACHE_DEFAULT_URL=redis://localhost:{{ redis_port }}
          export CACHE_CAKECORE_URL=redis://localhost:{{ redis_port }}
          export CACHE_CAKEMODEL_URL=redis://localhost:{{ redis_port }}
          export CACHE_CAKEROUTES_URL=redis://localhost:{{ redis_port }}
          {% endif %}
    - name: Create direnv setting
      ansible.builtin.blockinfile:
        path: "{{ php_project_source_dir }}/.envrc"
        mode: "0644"
        create: true
        block: "{{ cakephp_dot_envrc_value }}"
    - name: Update .gitignore setting
      ansible.builtin.blockinfile:
        path: "{{ php_project_source_dir }}/.gitignore"
        block: "{{ cakephp_gitignore_value }}"
    - name: Display direnv setting
      ansible.builtin.debug:
        msg: |
          自動生成したdirenvの設定(.envrc)は以下の通りです
          ```
          {{ cakephp_dot_envrc_value -}}
          ```
    - name: Create CakePHP setting
      ansible.builtin.blockinfile:
        path: "{{ php_project_source_dir }}/config/.env"
        mode: "0644"
        create: true
        block: "{{ cakephp_dot_env_value }}"
    - name: Display direnv setting
      ansible.builtin.debug:
        msg: |
          自動生成したCakePHPの設定(config/.env)は以下の通りです
          ```
          {{ cakephp_dot_env_value -}}
          ```
