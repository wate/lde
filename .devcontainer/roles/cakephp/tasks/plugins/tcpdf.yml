---
- name: Check exists tcpdf
  ansible.builtin.stat:
    path: "{{ php_project_tmp_dir }}/vendor/tecnickcom/tcpdf"
  register: package_result
- name: Setup plugin
  when: package_result.stat.exists
  block:
    - name: TCPDFのフォントファイル格納ディレクトリを作成
      ansible.builtin.file:
        path: "{{ php_project_tmp_dir }}/resources/fonts"
        state: directory
        mode: "0755"
      register: resource_font_dir_result
    - name: TCPDF用フォントファイルの生成
      when: resource_font_dir_result is changed
      block:
        - name: TCPDFのオリジナルのフォントファイルをコピー
          ansible.posix.synchronize:
            src: "{{ php_project_tmp_dir }}/vendor/tecnickcom/tcpdf/fonts/"
            dest: "{{ php_project_tmp_dir }}/resources/fonts"
          delegate_to: "{{ inventory_hostname }}"
        - name: 追加で生成するフォントファイルを抽出
          ansible.builtin.find:
            paths:
              - /usr/share/fonts/opentype/ipaexfont-gothic
              - /usr/share/fonts/opentype/ipaexfont-gothic
              # - /usr/share/fonts/opentype/ipafont-gothic
              # - /usr/share/fonts/opentype/ipafont-mincho
              - /usr/share/fonts/truetype/bizud-mincho
              - /usr/share/fonts/truetype/bizud-gothic
            patterns:
              - '*.ttf'
          register: find_result
        - name: TCPDF用フォントファイルを生成
          ansible.builtin.command:
            cmd: php vendor/tecnickcom/tcpdf/tools/tcpdf_addfont.php --outpath {{ php_project_tmp_dir }}/resources/fonts --fonts "{{ item }}"
            chdir: "{{ php_project_tmp_dir }}"
          loop: "{{ find_result.files | map(attribute='path') | list }}"
          tags:
            - skip_ansible_lint
        - name: TCPDFの設定ファイルにフォントファイル格納ディレクトリを示す定数を追記
          ansible.builtin.blockinfile:
            path: "{{ php_project_tmp_dir }}/config/paths.php"
            marker: "// {mark} ANSIBLE MANAGED BLOCK"
            content: |
              define ('K_PATH_FONTS', ROOT . DS . 'resources'. DS . 'fonts' . DS);
