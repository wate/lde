---
- name: Setup Slim project
  become: false
  block:
    - name: Check exists composer.json
      ansible.builtin.stat:
        path: "{{ php_project_source_dir }}/composer.json"
      register: composer_json_result
    - name: Remove temporary project directory
      ansible.builtin.file:
        path: "{{ php_project_tmp_dir }}"
        state: absent
    - name: Create Slim project
      when: not composer_json_result.stat.exists
      block:
        - name: Create Slim temporary project
          community.general.composer:
            command: create-project
            arguments: '"slim/slim-skeleton:^{{ slim_major_version | default(4) | string }}" {{ php_project_tmp_dir }}'
            no_dev: false
            prefer_dist: true
            working_dir: "{{ php_project_tmp_dir | dirname }}"
    - name: Setup Slim project
      when: composer_json_result.stat.exists
      block:
        - name: Create temporary project directory
          ansible.builtin.file:
            path: "{{ php_project_tmp_dir }}"
            state: directory
            mode: "0755"
        - name: Synchronize project files(VirtualBox shard directory => temporary directory)
          ansible.posix.synchronize:
            src: "{{ php_project_source_dir }}/"
            dest: "{{ php_project_tmp_dir }}"
            rsync_opts: "{{ slim_project_exclude_synchronize_params | map('regex_replace', '(.+)', '--exclude=\\1') }}"
          delegate_to: "{{ inventory_hostname }}"
        - name: Install php dependency packages
          community.general.composer:
            command: install
            no_dev: false
            working_dir: "{{ php_project_tmp_dir }}"
    - name: Add php project dependency packages
      community.general.composer:
        command: require
        arguments: '"{{ item.name }}" {{ item.dev | default(false) | ternary("--dev", "") }}'
        working_dir: "{{ php_project_tmp_dir }}"
      loop: "{{ slim_project_addtitinal_packages | default([]) }}"
      loop_control:
        label: "{{ item.name }}"
    - name: Synchronize project files(temporary directory => VirtualBox shard directory)
      ansible.posix.synchronize:
        src: "{{ php_project_tmp_dir }}/"
        dest: "{{ php_project_source_dir }}"
        rsync_opts: "{{ slim_project_exclude_synchronize_params | map('regex_replace', '(.+)', '--exclude=\\1') }}"
      delegate_to: "{{ inventory_hostname }}"
    - name: Remove temporary project directory
      ansible.builtin.file:
        path: "{{ php_project_tmp_dir }}"
        state: absent
