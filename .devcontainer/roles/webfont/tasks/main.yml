---
- name: Install font tools
  ansible.builtin.apt:
    name: "{{ webfont_packages }}"
  become: true
- name: Generate subset text file
  ansible.builtin.template:
    src: subset_all.txt.j2
    dest: "{{ webfont_output_font_dir }}/subset.txt"
    mode: "0644"
  vars:
    ## 日本語WEBフォントをサブセット化する際の参考文字列一覧 | U-618WEB
    ## https://u-618.org/webfont-subset/
    subset_text_files:
      - files/subset_alphanumeric.txt
      - files/subset_symbol.txt
      - files/subset_fullwidth_alphanumeric.txt
      - files/subset_fullwidth_symbol.txt
      - files/subset_hiragana.txt
      - files/subset_katakana.txt
      - files/subset_kanji.txt
  register: update_subset_text_result
- name: Set font files variable
  ansible.builtin.set_fact:
    convert_subset_fonts: "{{ webfont_font_files | rejectattr('skip_convert_subset', 'defined') | list }}"
    copy_original_fonts: "{{ webfont_font_files | selectattr('skip_convert_subset', 'defined') | list }}"
- name: Set convert svg variable
  ansible.builtin.set_fact:
    convert_svg_fonts: "{{ convert_svg_fonts | default({}) | combine({converted_file: convert_svg}) }}"
  vars:
    converted_file: "{{ webfont_font_file.output_file | default(webfont_font_file.src | basename) }}"
    convert_svg: "{{ webfont_font_file.convert_svg | default(false) }}"
  loop: "{{ webfont_font_files }}"
  loop_control:
    loop_var: webfont_font_file
    label: "{{ webfont_font_file.src | basename }}"
- name: Debug
  ansible.builtin.debug:
    var: convert_svg_fonts
- name: Update subset font and Web font
  when: >
    update_subset_text_result is changed
    or
    webfont_force_regenerate
  block:
    - name: Generate subset font
      ansible.builtin.command:
        cmd: >
          fonttools subset
          --text-file="{{ webfont_output_font_dir }}/subset.txt"
          --output-file="{{ item.output_file | default(item.src | basename) }}"
          {{ item.src }}
        chdir: "{{ webfont_output_font_dir }}"
      loop: "{{ convert_subset_fonts }}"
      loop_control:
        label: "{{ item.src | basename }}"
    - name: Copy original font files
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ webfont_output_font_dir }}/{{ item.output_file | default(item.src | basename) }}"
        remote_src: true
        mode: "0644"
      loop: "{{ copy_original_fonts }}"
      loop_control:
        label: "{{ item.src | basename }}"
    - name: Find font files
      ansible.builtin.find:
        paths:
          - "{{ webfont_output_font_dir }}"
        patterns:
          - "*.ttf"
          - "*.otf"
      register: find_convert_font_file_result
    - name: Set conevert font files
      ansible.builtin.set_fact:
        convert_font_files: "{{ find_convert_font_file_result.files | map(attribute='path') | sort }}"
    - name: Generate woff file
      ansible.builtin.command:
        cmd: sfnt2woff-zopfli "{{ font_file }}"
        chdir: "{{ webfont_output_font_dir }}"
      loop: "{{ convert_font_files }}"
      loop_control:
        loop_var: font_file
        label: "{{ font_file | basename }}"
    - name: Generate woff2 file
      ansible.builtin.command:
        cmd: woff2_compress "{{ font_file }}"
        chdir: "{{ webfont_output_font_dir }}"
      loop: "{{ convert_font_files }}"
      loop_control:
        loop_var: font_file
        label: "{{ font_file | basename }}"
    - name: Generate svg file
      ansible.builtin.command:
        cmd: fontforge -lang=ff -c "Open('{{ font_file | basename }}'); Generate('{{ (font_file | basename)[:-4] }}.svg')"
        chdir: "{{ webfont_output_font_dir }}"
      when: convert_svg_fonts[(font_file | basename)] | default(false)
      loop: "{{ convert_font_files }}"
      loop_control:
        loop_var: font_file
        label: "{{ font_file | basename }}"
- name: Appned extra css(Nerd fonts)
  ansible.builtin.import_tasks:
    file: extra/nerd_fonts.yml
  when: webfont_css_extra_nerd_fonts is defined
- name: Generate CSS file
  ansible.builtin.template:
    src: fonts.css.j2
    dest: "{{ webfont_output_css_dir }}/fonts.css"
    mode: "0644"
