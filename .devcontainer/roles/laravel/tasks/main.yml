---
- name: Setup PHP project
  become: false
  block:
    - name: Create symlink
      ansible.builtin.file:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        state: link
      loop:
        # - src: /var/cakephp/logs
        #   dest: ~/logs
        - src: /vagrant
          dest: ~/src
    - name: Check exists composer.json
      ansible.builtin.stat:
        path: "{{ php_project_source_dir }}/composer.json"
      register: composer_json_result
    - name: Remove temporary project directory
      ansible.builtin.file:
        path: "{{ php_project_tmp_dir }}"
        state: absent
    - name: Create PHP project
      when: not composer_json_result.stat.exists
      block:
        - name: Create PHP project
          community.general.composer:
            command: create-project
            arguments: '"laravel/laravel:^{{ laravel_major_version | default(9) | string }}" {{ php_project_tmp_dir }}'
            no_dev: false
            prefer_dist: true
            working_dir: "{{ php_project_tmp_dir | dirname }}"
    - name: Setup PHP project
      when: composer_json_result.stat.exists
      block:
        - name: Create temporary project directory
          ansible.builtin.file:
            path: "{{ php_project_tmp_dir }}"
            state: directory
            mode: "0755"
        - name: Synchronize project files(VirtualBox shard directory => temporary directory)
          ansible.posix.synchronize:
            src: "{{ php_project_source_dir }}/"
            dest: "{{ php_project_tmp_dir }}"
            rsync_opts: "{{ laravel_project_exclude_synchronize_params | map('regex_replace', '(.+)', '--exclude=\\1') }}"
          delegate_to: "{{ inventory_hostname }}"
        - name: Install php dependency packages
          community.general.composer:
            command: install
            no_dev: false
            working_dir: "{{ php_project_tmp_dir }}"
    - name: Add php project dependency packages
      community.general.composer:
        command: require
        arguments: '"{{ item.name }}" {{ item.dev | default(false) | ternary("--dev", "") }}'
        working_dir: "{{ php_project_tmp_dir }}"
      loop: "{{ laravel_project_addtitinal_packages | default([]) }}"
      loop_control:
        label: "{{ item.name }}"
    - name: Change permission
      ansible.builtin.file:
        path: "{{ php_project_tmp_dir }}/storage/{{ item }}"
        recurse: true
        mode: "0777"
      loop:
        - app
        - framework
        - logs
    - name: Setup AdminLTE plugin setting
      ansible.builtin.include_tasks:
        file: plugins/adminlte.yml
    - name: Setup inertia plugin setting
      ansible.builtin.include_tasks:
        file: plugins/inertia.yml
    - name: Synchronize project files(temporary directory => VirtualBox shard directory)
      ansible.posix.synchronize:
        src: "{{ php_project_tmp_dir }}/"
        dest: "{{ php_project_source_dir }}"
        rsync_opts: "{{ laravel_project_exclude_synchronize_params | map('regex_replace', '(.+)', '--exclude=\\1') }}"
      delegate_to: "{{ inventory_hostname }}"
    - name: Remove temporary project directory
      ansible.builtin.file:
        path: "{{ php_project_tmp_dir }}"
        state: absent
    - name: Create direnv setting
      ansible.builtin.blockinfile:
        path: "{{ php_project_source_dir }}/.envrc"
        mode: "0644"
        create: true
        block: |
          PATH_add bin
          layout php
          layout node
          source_env_if_exists .env
    - name: Add .gitignore direnv setting file
      ansible.builtin.lineinfile:
        path: "{{ php_project_source_dir }}/.gitignore"
        line: .envrc
    - name: Create/update .env file
      ansible.builtin.lineinfile:
        path: "{{ php_project_source_dir }}/.env"
        mode: "0644"
        create: true
        regex: ^{{ item.key }}=
        line: "{{ item.key }}={{ (item.value is none) | ternary('null', item.value | string | lower) }}"
      loop: "{{ laravel_cnf | dict2items }}"
      loop_control:
        label: "{{ item.key }}"
